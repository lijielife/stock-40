<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper 
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.youku.java.copyright.mapper.CustomerMapper">

	<resultMap id="customerMap" type="Customer">
		<result property="id" column="pk_id" />
		<result property="type" column="type" />
		<result property="name" column="name" />
		<result property="mobile" column="mobile" />
		<result property="company" column="company" />
		<result property="remark" column="remark" />
		<result property="userId" column="fk_user_id" />
		<result property="createTime" column="create_time" />
		
		<result property="productionPrice" column="production_price" />
		<result property="number" column="number" />
		<result property="sellPrice" column="sell_price" />
		<result property="sellNumber" column="sell_number" />
		<result property="damagePrice" column="damage_price" />
		<result property="profitPrice" column="profit_price" />
		
	</resultMap>
    
    <insert id="insert" parameterType="Customer" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO t_customer(
			`type`, `name`, `mobile`, `company`, `remark`, `fk_user_id`, `create_time`,
			`production_price`, `number`, `sell_price`, `sell_number`, `damage_price`, `profit_price`) 
		VALUES(
			#{type}, #{name}, #{mobile}, #{company}, #{remark}, #{userId}, #{createTime},
			#{productionPrice}, #{number}, #{sellPrice}, #{sellNumber}, #{damagePrice}, #{profitPrice})
	</insert>
	
	<insert id="insertList" parameterType="java.util.List" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO t_customer(
			`type`, `name`, `mobile`, `company`, `remark`, `fk_user_id`, `create_time`,
			`production_price`, `number`, `sell_price`, `sell_number`, `damage_price`, `profit_price`) 
		VALUES
		<foreach collection="list" item="item" index="index" separator="," > 
			(#{type}, #{name}, #{mobile}, #{company}, #{remark}, #{userId}, #{createTime},
			#{productionPrice}, #{number}, #{sellPrice}, #{sellNumber}, #{damagePrice}, #{profitPrice})
		</foreach>
	</insert>

	<update id="update" parameterType="Customer">
		UPDATE t_customer
		SET `type` = #{type},
		`name` = #{name},
		`mobile` = #{mobile},
		`company` = #{company},
		`remark` = #{remark},
		`fk_user_id` = #{userId},
		
		`production_price` = #{productionPrice},
		`number` = #{number},
		`sell_price` = #{sellPrice},
		`sell_number` = #{sellNumber},
		`damage_price` = #{damagePrice},
		`profit_price` = #{profitPrice}
		WHERE pk_id = #{id}
	</update>

	<select id="selectOne" parameterType="Map" resultMap="customerMap">
		SELECT * 
		FROM t_customer
		WHERE pk_id = #{id}
	</select>
	
	<select id="selectListByPage" parameterType="Map" resultMap="customerMap">
        SELECT * 
        FROM t_customer
        order by pk_id desc
        LIMIT #{limit}
        OFFSET #{offset}
    </select>
    <select id="selectListByIds" parameterType="Map" resultMap="customerMap">
        SELECT * 
        FROM t_customer
        WHERE pk_id IN
	    <foreach item="item" index="index" collection="ids" open="(" separator="," close=")">
	        #{item}
	    </foreach>
	    order by pk_id desc
    </select>
    
    <select id="countListByIds" parameterType="Map" resultType="Integer">
        SELECT count(1)
        FROM t_customer
        WHERE pk_id IN
	    <foreach item="item" index="index" collection="ids" open="(" separator="," close=")">
	        #{item}
	    </foreach>
    </select>
	
	<delete id="delete" parameterType="Map">
		delete from t_customer
		where pk_id = #{id}
	</delete>
	
	<delete id="deleteAll">
		delete from t_customer
    </delete>

	<select id="selectByMobile" parameterType="Map" resultMap="customerMap">
		SELECT * 
		FROM t_customer
		WHERE `fk_user_id` = #{userId}
		and `type` = #{type}
		and `mobile` = #{mobile}
	</select>
	
	<select id="selectByType" parameterType="Map" resultMap="customerMap">
        SELECT * 
        FROM t_customer
        where `fk_user_id` = #{userId}
        and `type` = #{type}
        <if test="name != null and name != ''">
        	and name like CONCAT('%', '${name}', '%')
        </if>
        order by pk_id desc
        LIMIT #{limit}
        OFFSET #{offset}
    </select>
	
	<select id="countByType" parameterType="Map" resultType="Integer">
        SELECT count(1)
        FROM t_customer
        where `fk_user_id` = #{userId}
        and `type` = #{type}
        <if test="name != null and name != ''">
        	and name like CONCAT('%', '${name}', '%')
        </if>
    </select>
    
	<update id="updatePrice" parameterType="Map">
		UPDATE t_customer
		SET `production_price` = `production_price` + #{productionPrice},
		`number` = `number` + #{number},
		`sell_price` = `sell_price` + #{sellPrice},
		`sell_number` = `sell_number` + #{sellNumber},
		`damage_price` = `damage_price` + #{damagePrice},
		`profit_price` = `profit_price` + #{profitPrice}
		WHERE pk_id = #{id}
	</update>

</mapper>